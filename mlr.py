# -*- coding: utf-8 -*-
"""MLR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SKTMof1Fs8UCxbyrdRCd973QG8tOF0iw
"""

import numpy as n
import matplotlib.pyplot as plt
import pandas as p

df= p.read_csv("/content/50_Startups.csv")
x=df.iloc[:,:-1].values
y=df.iloc[:,4].values

#Encoding string value columns into numerical format
from sklearn.preprocessing import LabelEncoder,OneHotEncoder
label_encoder=LabelEncoder()
x[:,3]=label_encoder.fit_transform(x[:,3])
onehotencoder=OneHotEncoder()
a=onehotencoder.fit_transform(x).toarray()
a

a=a[:,1:] #to avoid dummy variable trap
x=x[:,:3]#addong encoding data to x
x=n.concatenate((x,a),axis=1)
a

#splitting traina nd test datasets from given data
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

#create linear model
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(x_train,y_train)

"""**bold text**"""

y_pred=regressor.predict(x_test)

"""**Let the threshold value be 0.5 and and P>0.5 should be eliminated**"""

#backward elimination
import statsmodels.api as sm
X_opt=n.array(X[:,[0,1,3,4,]],dtype=float)
regressor_OLS=sm.OLS(endog=y,exog=X_opt).fit()
regressor_OLS.summary()

#Create a new array of 1's
import statsmodels.api as sm
X=n.append(arr=n.ones((50,1)),values=x,axis=1)

#Forward Selection
X_opt2=n.array(X[:,[0,1,3,4,5]],dtype=float)
regressor_OLS2=sm.OLS(endog=y,exog=X_opt2).fit()
regressor_OLS2.summary()

